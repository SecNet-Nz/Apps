//
//  SettingsViewController.m
//  Interface 
//
//  Generated by Interface 2
//  http://lesscode.co.nz/interface
//

#import "SettingsViewController.h"

#import "GradientView.h"
#import "MKMapView+ZoomLevel.h"

@implementation SettingsViewController


- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation {
    return YES;
}

- (void)viewDidLoad {
  [super viewDidLoad];
  
  // ----------------------------;
  // View Controller Root View;
  // ----------------------------;
  
  UIView *contentView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, 460)];
  contentView.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;
  
  // ----------------------------;
  // UINavigationBar -> navigationBar1;
  // ----------------------------;
  
  UINavigationBar *navigationBar1 = [[UINavigationBar alloc] initWithFrame:CGRectMake(0, 0, 320, 44)];
  navigationBar1.delegate = (id<UINavigationBarDelegate>)self;
  UINavigationItem *navigationBar1BackItem = [[[UINavigationItem alloc] initWithTitle:nil] autorelease];
  UINavigationItem *navigationBar1TopItem = [[[UINavigationItem alloc] initWithTitle:nil] autorelease];
  NSArray *navigationBar1Items = [NSArray arrayWithObjects:navigationBar1BackItem, navigationBar1TopItem, nil];
  [navigationBar1 setItems:navigationBar1Items animated:NO];
  [contentView addSubview:navigationBar1];
  navigationBar1.alpha = 1.0;
  navigationBar1.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleBottomMargin;
  navigationBar1.barStyle = UIBarStyleDefault;
  navigationBar1.topItem.title = @"Settings";
  [navigationBar1 setTitleVerticalPositionAdjustment:0.0 forBarMetrics:UIBarMetricsDefault];
  navigationBar1.topItem.hidesBackButton = YES;
  [navigationBar1 release];
  
  
  // ----------------------------;
  // UIToolbar -> toolbar1;
  // ----------------------------;
  
  UIToolbar *toolbar1 = [[UIToolbar alloc] initWithFrame:CGRectMake(0, 416, 320, 44)];
  [contentView addSubview:toolbar1];
  toolbar1.alpha = 1.0;
  toolbar1.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleTopMargin;
  toolbar1.barStyle = UIBarStyleDefault;
  [toolbar1 release];
  
  
  // ----------------------------;
  // Toolbar Button -> toolbarButtonItem1;
  // ----------------------------;
  
  UIBarButtonItem *toolbarButtonItem1 = [[[UIBarButtonItem alloc] initWithTitle:@"Save" style:UIBarButtonItemStyleBordered target:nil action:nil] autorelease];
  
  
  // ----------------------------;
  // Toolbar Flexible Space -> toolbarButtonItem2;
  // ----------------------------;
  
  UIBarButtonItem *toolbarButtonItem2 = [[[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFlexibleSpace target:nil action:nil] autorelease];
  
  
  // ----------------------------;
  // Toolbar Button -> toolbarButtonItem3;
  // ----------------------------;
  
  UIBarButtonItem *toolbarButtonItem3 = [[[UIBarButtonItem alloc] initWithTitle:@"Cancel" style:UIBarButtonItemStyleBordered target:nil action:nil] autorelease];
  toolbarButtonItem3.target = self;
  toolbarButtonItem3.action = @selector(didTap_toolbarButtonItem3:forEvent:);
  
  toolbar1.items = [NSArray arrayWithObjects:toolbarButtonItem1, toolbarButtonItem2, toolbarButtonItem3, nil];
  
  contentView.frame = self.view.bounds;
  [self.view addSubview:contentView];
  [contentView release];
}

- (void)viewDidUnload {
  [super viewDidUnload];
}

- (void)dealloc {
  [super dealloc];
}

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    [[UIApplication sharedApplication] setStatusBarHidden:NO withAnimation:UIStatusBarAnimationFade];
    [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleDefault animated:animated];
}


// ----------------
// Navigation Bar
// ----------------

- (BOOL)navigationBar:(UINavigationBar *)navigationBar shouldPopItem:(UINavigationItem *)item {
  return NO;
}

// ----------------
// Action
// ----------------

- (void)didTap_toolbarButtonItem3:(id)sender forEvent:(UIEvent *)event {
  [self.navigationController popViewControllerAnimated:YES];
}




@end